// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: f.proto

package gRPCgenerisano;

/**
 * Protobuf enum {@code RequestType}
 */
public enum RequestType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ADD_TOPIC = 0;</code>
   */
  ADD_TOPIC(0),
  /**
   * <code>ADD_COMMENT = 1;</code>
   */
  ADD_COMMENT(1),
  /**
   * <code>DEL_COMMENT = 2;</code>
   */
  DEL_COMMENT(2),
  /**
   * <code>UP_COMMENT = 3;</code>
   */
  UP_COMMENT(3),
  /**
   * <code>GET_TOPICS = 4;</code>
   */
  GET_TOPICS(4),
  /**
   * <code>GET_COMMENTS = 5;</code>
   */
  GET_COMMENTS(5),
  /**
   * <code>Add_COMMENT_TO_COMMENT = 6;</code>
   */
  Add_COMMENT_TO_COMMENT(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ADD_TOPIC = 0;</code>
   */
  public static final int ADD_TOPIC_VALUE = 0;
  /**
   * <code>ADD_COMMENT = 1;</code>
   */
  public static final int ADD_COMMENT_VALUE = 1;
  /**
   * <code>DEL_COMMENT = 2;</code>
   */
  public static final int DEL_COMMENT_VALUE = 2;
  /**
   * <code>UP_COMMENT = 3;</code>
   */
  public static final int UP_COMMENT_VALUE = 3;
  /**
   * <code>GET_TOPICS = 4;</code>
   */
  public static final int GET_TOPICS_VALUE = 4;
  /**
   * <code>GET_COMMENTS = 5;</code>
   */
  public static final int GET_COMMENTS_VALUE = 5;
  /**
   * <code>Add_COMMENT_TO_COMMENT = 6;</code>
   */
  public static final int Add_COMMENT_TO_COMMENT_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RequestType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RequestType forNumber(int value) {
    switch (value) {
      case 0: return ADD_TOPIC;
      case 1: return ADD_COMMENT;
      case 2: return DEL_COMMENT;
      case 3: return UP_COMMENT;
      case 4: return GET_TOPICS;
      case 5: return GET_COMMENTS;
      case 6: return Add_COMMENT_TO_COMMENT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RequestType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
          public RequestType findValueByNumber(int number) {
            return RequestType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return gRPCgenerisano.F.getDescriptor().getEnumTypes().get(0);
  }

  private static final RequestType[] VALUES = values();

  public static RequestType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RequestType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:RequestType)
}

